---
import Webring from "../components/Webring.astro";
import "@fontsource/atkinson-hyperlegible/400.css"; // load it here instead of in <style>

export interface Props {
	title?: string;
	description?: string;
}

const { title, description } = Astro.props;
---

<!doctype html>
<html lang="en" prefix="og: https://ogp.me/ns#">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<meta name="generator" content={Astro.generator} />

		<link rel="icon" type="image/png" href="/favicon.png" />
		<link rel="canonical" href={new URL(Astro.url.pathname, Astro.site)} />
		<link rel="alternate" type="application/rss+xml" title="lewisakura" href={new URL("/rss.xml", Astro.site)} />

		{
			/*
			conditional string interpolation seems to cause a compiler issue and dumps the rest of the head into the
			body in this version of astro... weird
		*/
		}
		{/* <title>{title && `${title} | `}lewisakura</title> */}
		{title && <title>{title} | lewisakura</title>}
		{!title && <title>lewisakura</title>}

		<meta property="og:title" content={title ?? "lewisakura"} />
		{title && <meta property="og:site_name" content="lewisakura" />}
		<meta property="og:type" content="website" />
		<meta property="og:url" content={new URL(Astro.url.pathname, Astro.site)} />
		<meta name="image" content={new URL("/favicon.png", Astro.site)} />
		<meta property="og:image" content={new URL("/favicon.png", Astro.site)} />
		{
			description && (
				<>
					<meta name="description" content={description} />
					<meta property="og:description" content={description} />
				</>
			)
		}

		<meta name="theme-color" content="#f5c2e7" />
	</head>
	<body>
		<header>
			<h1>lewisakura <span id="theFunny">ðŸŒ¸</span></h1>
			<nav>
				<a href="/">about</a> &bull;
				<a href="/posts">blog</a>
			</nav>
		</header>
		<main>
			<slot />
		</main>
		<hr />
		<footer>
			<p id="socials">
				<a href="https://github.com/lewisakura" rel="me">GitHub</a> &bull;
				<a href="https://twitter.com/lewisakura_" rel="me">Twitter</a> &bull;
				<a href="https://bsky.app/profile/lewisakura.moe" rel="me">Bluesky</a> &bull;
				<a href="https://youtube.com/@lewisakura" rel="me">YouTube</a> &bull;
				<a href="https://twitch.tv/lewisakura" rel="me">Twitch</a> &bull;
				<a href="https://www.patreon.com/lewisakura" rel="me">Patreon</a> &bull;

				<code>@lewisakura</code> /
				<code>@lewisakura_</code>
			</p>
			<div class="webring" id="people">
				<Webring name="shoritsu" url="https://shoritsu.xyz" gif={true} />
				<Webring name="ovyerus" url="https://ovyerus.com" />
				<Webring name="ziad87" url="https://ziad87.net" gif={true} />
				<Webring name="auravoid" url="https://auravoid.dev" />
				<Webring name="spotlight" url="https://joscomputing.space" gif={true} />
				<Webring name="sapphic" url="https://sapphic.moe" />
				<Webring name="megu" url="https://megu.dev" />
				<Webring name="tom" url="https://thomasr.me" gif={true} />
				<Webring name="ven" url="https://vendicated.dev" />
				<Webring name="espi" url="https://espi.me" />
				<Webring name="george" url="https://george.hotten.uk/" />
			</div>
			<div class="webring padded">
				<Webring name="vencord" url="https://vencord.dev" gif={true} />
			</div>
		</footer>
		<script>
			const colors = [
				"var(--rosewater)",
				"var(--flamingo)",
				"var(--pink)",
				"var(--mauve)",
				"var(--red)",
				"var(--maroon)",
				"var(--peach)",
				"var(--yellow)",
				"var(--green)",
				"var(--teal)",
				"var(--sky)",
				"var(--sapphire)",
				"var(--blue)",
				"var(--lavender)",
			];

			const similarColors = [
				["var(--rosewater)", "var(--flamingo)", "var(--pink)"],
				["var(--red)", "var(--maroon)", "var(--pink)"],
				["var(--peach)", "var(--yellow)"],
				["var(--teal)", "var(--sky)", "var(--sapphire)"],
				["var(--blue)", "var(--lavender)"],
			];

			function isSimilar(oldColor: string, newColor: string) {
				for (const similar of similarColors) {
					if (similar.includes(oldColor) && similar.includes(newColor)) {
						return true;
					}
				}
				return false;
			}

			// load saved accent color from localStorage
			const savedAccent = localStorage.getItem("accentColor");
			if (savedAccent) {
				document.documentElement.style.setProperty("--accent", savedAccent);
			}

			const funny = document.getElementById("theFunny")! as HTMLSpanElement;

			funny.onclick = () => {
				const currentValue = document.documentElement.style.getPropertyValue("--accent");

				let newValue: string = "";
				do {
					newValue = colors[Math.floor(Math.random() * colors.length)];
				} while (newValue === currentValue || isSimilar(currentValue, newValue));

				document.documentElement.style.setProperty("--accent", newValue);
				localStorage.setItem("accentColor", newValue);
			};

			// konami code
			const konami = [38, 38, 40, 40, 37, 39, 37, 39, 66, 65];
			let konamiIndex = 0;
			let yayKomami = false;

			document.addEventListener("keydown", (e) => {
				if (yayKomami) return;

				if (e.keyCode === konami[konamiIndex++]) {
					if (konamiIndex === konami.length) {
						setInterval(() => {
							funny.click();
						}, 150);
					}
				} else {
					konamiIndex = 0;
				}
			});
		</script>
	</body><style>
		#theFunny {
			cursor: pointer;
			user-select: none;
		}
	</style>

	<style is:global lang="scss">
		@use "sass:map";

		@use "@catppuccin/palette/scss/catppuccin";



		/* based off of sakura.css: https://github.com/oxalorg/sakura/ */
		/* but with catppuccin theme colors */

		/* https://github.com/catppuccin/catppuccin */
		:root {
			@each $color, $hex in map.get(catppuccin.$palette, "mocha") {
				--#{$color}: #{$hex};
			}

			// @media (prefers-color-scheme: light) {
			// 	@each $color, $hex in map-get(catppuccin.$palette, "latte") {
			// 		--#{$color}: #{$hex};
			// 	}
			// }

			--accent: var(--pink);
		}

		html {
			font-size: 62.5%;
			font-family: "Atkinson Hyperlegible", sans-serif;
		}

		body {
			font-size: 1.8rem;
			line-height: 1.618;
			max-width: 38em;
			margin: auto;
			color: var(--text);
			background-color: var(--base);
			padding: 13px;
		}

		@media (max-width: 684px) {
			body {
				font-size: calc(1.8rem * 0.85);
			}
		}

		@media (max-width: 382px) {
			body {
				font-size: calc(1.8rem * 0.75);
			}
		}

		h1,
		h2,
		h3,
		h4,
		h5,
		h6 {
			line-height: 1.1;
			font-weight: 400;
			margin-bottom: 1rem;
			overflow-wrap: break-word;
			word-wrap: break-word;
			-ms-word-break: break-all;
			word-break: break-word;
			color: var(--accent);
		}

		h1 {
			font-size: 2.35em;
		}
		h2 {
			font-size: 2em;
		}
		h3 {
			font-size: 1.75em;
		}
		h4 {
			font-size: 1.5em;
		}
		h5 {
			font-size: 1.25em;
		}
		h6 {
			font-size: 1em;
		}

		p {
			margin-top: 0px;
			margin-bottom: 2.5rem;
		}

		small,
		sub,
		sup {
			font-size: 75%;
		}

		hr {
			border-color: var(--accent);
			border-style: solid;
		}

		a {
			text-decoration: none;
			color: var(--accent);
		}

		a:hover {
			border-bottom: 2px solid var(--accent);
		}

		ul {
			padding-left: 1.4em;
			margin-top: 0px;
			margin-bottom: 2.5rem;
		}

		li {
			margin-bottom: 0.4em;
		}

		blockquote {
			margin-left: 0px;
			margin-right: 0px;
			padding-left: 1em;
			padding-top: 0.8em;
			padding-bottom: 0.8em;
			padding-right: 0.8em;
			border-left: 5px solid var(--accent);
			margin-bottom: 2.5rem;
			background-color: var(--surface0);
		}

		blockquote small {
			font-style: italic;
			color: var(--subtext0);
		}

		blockquote small:before {
			content: "â€” ";
		}

		pre {
			display: block;
			padding: 1em;
			overflow-x: auto;
			margin-top: 0px;
			margin-bottom: 2.5rem;
			font-size: 0.9em;
			font-family: monospace;

			@media (prefers-color-scheme: dark) {
				background-color: var(--surface0) !important;
			}
		}

		code,
		kbd,
		samp {
			font-size: 0.9em;
			padding: 0 0.5em;
			background-color: var(--surface0);
			white-space: pre-wrap;
			font-family: monospace;
		}

		pre code {
			padding: 0;
			background-color: transparent !important;
			white-space: pre;
			font-size: 1em;
			font-family: monospace;
		}

		code {
			counter-reset: step;
			counter-increment: step 0;

			.line:before {
				content: counter(step);
				counter-increment: step;
				width: 1rem;
				margin-right: 1.5rem;
				display: inline-block;
				text-align: right;
				color: var(--overlay1);
			}
		}

		table {
			text-align: justify;
			width: 100%;
			border-collapse: collapse;
		}

		td,
		th {
			padding: 0.5em;
			border-bottom: 1px solid var(--surface0);
		}

		summary {
			cursor: pointer;
			user-select: none;
		}

		nav {
			color: var(--accent);
		}

		#socials {
			text-align: center;
		}

		.webring {
			display: flex;
			flex-wrap: wrap;
			justify-content: center;
			gap: 1rem;

			&.padded {
				margin-top: 2rem;
			}
		}
	</style>
</html>
